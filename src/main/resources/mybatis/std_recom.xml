<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 부분은 테이블명을 명시 -->
<mapper namespace="std_recom">

  <!-- 회원이 글을 읽게 되면 회원정보를 입력 -->
  <insert id="create" parameterType="Hashmap">
    insert into std_recom(std_recom_no, good_ch, stdlist_no, memberno)
    VALUES((SELECT NVL(MAX(std_recom_no), 0)+1 as std_recom_no FROM std_recom), 0, #{stdlist_no}, #{memberno})
  </insert>
  
  <!-- 이미 입력되어 있는 회원 인지 확인 -->
  <select id="std_recom_check" resultType="int" parameterType="Hashmap">
   select count(std_recom_no)
   from std_recom
   where stdlist_no = #{stdlist_no}
   and memberno = #{memberno}
  </select>
  
  <!-- 회원마다 , 스터디그룹마다 좋아요 싫어요 여부 확인 -->
  <select id="check" resultType="int" parameterType="Hashmap">
   select good_ch
   from std_recom
   where stdlist_no = #{stdlist_no}
   and memberno = #{memberno}
  </select>
  
  <!--회원이 스터디그룹의 좋아요를 체크한다면 좋아요 체크여부를 1로 바꿈  -->
  <update id="good_ch_Y" parameterType="Hashmap">
   update std_recom
   set good_ch = 1
   where stdlist_no = #{stdlist_no}
   and memberno = #{memberno}
  </update>
  
  <!--회원이 스터디그룹의 좋아요가 체크된 상태에서 좋아요를 다시 체크한다면 좋아요 체크여부를 0로 바꿈  -->
  <update id="good_ch_N" parameterType="Hashmap">
   update std_recom
   set good_ch = 0
   where stdlist_no = #{stdlist_no}
   and memberno = #{memberno}
  </update>
  
  <!--스터디그룹에 대한 좋아요 삭제 -->
  <delete id="delete" parameterType="int">
    delete from std_recom
    where stdlist_no = #{stdlist_no}
  </delete>
  
</mapper>